name: CI

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    name: Run lint & tests
    permissions:
      contents: read

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - uses: dtolnay/rust-toolchain@stable

      - name: Install mold
        run: |
          curl -L --retry 10 --silent --show-error https://github.com/rui314/mold/releases/download/v2.1.0/mold-2.1.0-$(uname -m)-linux.tar.gz \
          | sudo tar -C /usr --strip-components=1 -xzf -

          # test that it works
          /usr/bin/mold --version

      - name: Lint
        run: cargo clippy --workspace -- -D warnings

      - name: Run tests
        run: cargo test --workspace --all-features

  build:
    runs-on: ubuntu-latest
    name: Build images
    permissions:
      contents: read
      id-token: write
      packages: write

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: lts/*

      - uses: pnpm/action-setup@v2
        name: Install pnpm
        with:
          version: 8
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        env:
          PUBLISH: "true"
          GIT_SHA: ${{ github.sha }}
          VERSION: ${{ github.sha }}
        run: |
          echo _EXPERIMENTAL_DAGGER_CACHE_CONFIG="type=gha,mode=max,url=$ACTIONS_CACHE_URL,token=$ACTIONS_RUNTIME_TOKEN"
          export _EXPERIMENTAL_DAGGER_CACHE_CONFIG="type=gha,mode=max,url=$ACTIONS_CACHE_URL,token=$ACTIONS_RUNTIME_TOKEN"
          pnpm i
          pnpm exec tsx ci/index.mts

  deploy:
    runs-on: ubuntu-latest
    name: Deploy to AWS
    needs:
      - build
      - test

    if: github.ref == 'refs/heads/main'

    concurrency:
      group: aws

    environment:
      name: aws
      url: https://dbost.tv

    steps:
      - name: Deploy to AWS
        shell: bash
        run: |
          docker run --rm \
            -e AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }} \
            -e AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }} \
            -e AWS_DEFAULT_REGION=${{ env.AWS_DEFAULT_REGION }} \
            -e RUST_BACKTRACE=full \
            ghcr.io/alxandr/dbost/deployer:${{ github.sha }}
