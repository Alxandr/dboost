//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.1

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "season")]
pub struct Model {
	#[sea_orm(primary_key, auto_increment = false)]
	pub id: Uuid,
	pub series_id: Uuid,
	pub number: i16,
	pub name: Option<String>,
	pub tvdb_id: i32,
	pub theme_song_id: Option<Uuid>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
	#[sea_orm(
		belongs_to = "super::series::Entity",
		from = "Column::SeriesId",
		to = "super::series::Column::Id",
		on_update = "Cascade",
		on_delete = "Cascade"
	)]
	Series,
	#[sea_orm(
		belongs_to = "super::theme_song::Entity",
		from = "Column::ThemeSongId",
		to = "super::theme_song::Column::Id",
		on_update = "Cascade",
		on_delete = "SetNull"
	)]
	ThemeSong,
}

impl Related<super::series::Entity> for Entity {
	fn to() -> RelationDef {
		Relation::Series.def()
	}
}

impl Related<super::theme_song::Entity> for Entity {
	fn to() -> RelationDef {
		Relation::ThemeSong.def()
	}
}

impl ActiveModelBehavior for ActiveModel {}
